
pipeline:


  ### THIS ONLY NEEDS TO BE RUN THE FIRST TIME TO CREATE THE REPO
  # create_new_private_repo:
  #   image: mesosphere/aws-cli
  #   commands:
  #     - pwd
  #     - ls ./
  #     - secrets: [aws_access_key, aws_secret_key]
  #     - export AWS_ACCESS_KEY_ID=$$AWS_ACCESS_KEY
  #     - export AWS_SECRET_ACCESS_KEY=$$AWS_SECRET_KEY
  #     - export AWS_DEFAULT_REGION=us-east-1
  #     - aws ecr create-repository --repository-name bluelightltd/feingkai-frontend


  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    ttl: 7
    mount:
      - /drone/docker
    # Mount the cache volume, needs "Trusted"
    volumes:
      - /tmp/cache:/cache


  ecr:
    image: plugins/ecr
    debug: true
    secrets: [aws_access_key, aws_secret_key]
    access_key: $$AWS_ACCESS_KEY
    secret_key: $$AWS_SECRET_KEY
    repo: bluelightltd/feingkai-frontend
    registry: 770927716090.dkr.ecr.us-east-1.amazonaws.com
    dockerfile: Dockerfile
    storage_path: /drone/docker



  helm_deploy_staging:
    debug: true
    image: quay.io/ipedrazas/drone-helm
    skip_tls_verify: true
    chart: ./helm/
    release: "feingkai-frontend"
    wait: false
    recreate_pods: true
    tiller_ns: feingkai-web
    service_account: tiller
    secrets: [api_server, kubernetes_token]
    namespace: feingkai-web
    values_files: ["./helm/values-dev.yaml"]    
    when:
      event: push
      branch: master


  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - /drone/docker
    # Mount the cache volume, needs "Trusted"
    volumes:
      - /tmp/cache:/cache      

